(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7e82f17e"],{"581a":function(e,c,n){},"699e":function(e,c,n){"use strict";n.r(c);var t=n("7a23"),o={class:"article-page-wrap"},a={class:"article-page"},s=Object(t["createVNode"])("h1",{class:"article-h1"}," Icon 图标 ",-1),r=Object(t["createVNode"])("p",{class:"article-p"}," Icon，使用 svg 文件制作图标，已引入了以下基础图标，开箱即用。 ",-1),i=Object(t["createVNode"])("h2",{class:"article-h2"}," 基础图标 ",-1),l={class:"icon-list-wrap"},d=Object(t["createVNode"])("p",null,"（点击图标可复制标签）",-1),p=Object(t["createVNode"])("br",null,null,-1),f={class:"grid-icons"},b={class:"icon-wrap"},u={class:"icon-name"},g={type:"text",ref:"iconInput",style:{opacity:0}},j=Object(t["createVNode"])("h2",{class:"article-h2"}," 用法 ",-1),h=Object(t["createVNode"])("br",null,null,-1),O=Object(t["createVNode"])("h2",{class:"article-h2"}," Props 属性 ",-1),m=Object(t["createStaticVNode"])('<h2 class="article-h2"> 定制 </h2><p class="article-p"> 基础图标太少？尝试使用以下方案，引入您的svg图标并使用。 </p><h2 class="article-h2"> 方案一：使用iconfont.js </h2><p class="article-p"> 1. 前往<a href="https://www.iconfont.cn/">iconfont</a>，添加图标到项目<br> 2. 选择Symbol模式，下载图标包到本地。<br> 3. 从图标包中找到iconfont.js，引入到项目中。<br> 4. 图标的symbol名，“icon-xx-xxx”，将xx-xxx作为组件的name即可。<br></p><h2 class="article-h2"> 方案二：使用 webpack + svg-sprite-loader </h2><p class="article-p"> 1. 创建@/src/assets/icon/svgIcon文件夹，把所需的svg文件都放这。<br> 2. 配置vue.config.js，svg-sprite-loader将用于处理并引入.svg文件。<br></p>',6),v=Object(t["createVNode"])("p",{class:"article-p"}," 3. 在 main.js 中引入整个svgIcon文件夹。 ",-1),N=Object(t["createVNode"])("h2",{class:"article-h2"}," 总结一下两种方案 ",-1),V=Object(t["createVNode"])("p",{class:"article-p"},[Object(t["createTextVNode"])(" 1. 方案一适合小项目、团队合作要求不高的场景。开发过程中是在iconfont上不断更新图标列表，然后替换项目中的iconfont.js， 但在提交代码的过程中，无法很好地追踪到哪个队友新增了哪个icon，如果协同开发，你的队友添加的图标也需要整合到你的本地仓库呢。"),Object(t["createVNode"])("br"),Object(t["createTextVNode"])(" 2. 方案二除了配置有一丢丢繁琐，但恰好能解决了以上的痛点，适合大型项目多人合作场景，强力推荐。 ")],-1);function k(e,c,n,k,w,I){var x=Object(t["resolveComponent"])("code-pan"),y=Object(t["resolveComponent"])("fe-icon");return Object(t["openBlock"])(),Object(t["createBlock"])("div",o,[Object(t["createVNode"])("div",a,[s,Object(t["createVNode"])(x,{code:e.iport,canexpand:!1},null,8,["code"]),r,i,Object(t["createVNode"])("div",l,[d,p,Object(t["createVNode"])("ul",f,[(Object(t["openBlock"])(!0),Object(t["createBlock"])(t["Fragment"],null,Object(t["renderList"])(e.iconList,(function(c){return Object(t["openBlock"])(),Object(t["createBlock"])("li",{key:c,onClick:function(n){return e.copyIcon(c)}},[Object(t["createVNode"])("div",b,[Object(t["createVNode"])(y,{name:c,className:"icon-item"},null,8,["name"])]),Object(t["createVNode"])("span",u,Object(t["toDisplayString"])(c),1)],8,["onClick"])})),128))]),Object(t["withDirectives"])(Object(t["createVNode"])("input",g,null,512),[[t["vShow"],!0]])]),j,h,Object(t["createVNode"])("div",null,[Object(t["createVNode"])(y,{name:"fe-search",className:"icon-item",size:"25",color:"#000"})]),Object(t["createVNode"])(x,{code:e.iconBase,language:"html"},null,8,["code"]),O,Object(t["createVNode"])(x,{code:e.props},null,8,["code"]),m,Object(t["createVNode"])(x,{code:e.configSVG},null,8,["code"]),v,Object(t["createVNode"])(x,{code:e.configSVG2},null,8,["code"]),N,V])])}var w=Object(t["defineComponent"])({name:"Icon",data:function(){return{iconList:["fe-search","fe-edit","fe-link","fe-setting","fe-upload","fe-download","fe-list","fe-stroke-check","fe-stroke-close","fe-fill-check","fe-stroke-info","fe-up","fe-left","fe-down","fe-right","fe-left-triangle","fe-right-triangle","fe-up-triangle","fe-down-triangle","fe-go","fe-check","fe-close"],iport:I,iconBase:x,props:y,configSVG:S,configSVG2:B}},methods:{copyIcon:function(e){var c=this,n=this.$refs.iconInput;n.value='<fe-icon name="'.concat(e,'" />'),this.$nextTick((function(){n.select(),document.execCommand("copy"),c.$showToast({title:"已复制"})}))}}}),I="import { Icon } from 'fedora';",x='<fe-icon\n  name="fe-search"\n  className="icon-item"\n  size="25"\n  color="#000"\n/>',y="  props: {\n    name: { // 图标名，如 fe-search\n      type: String,\n      required: true,\n    },\n    className: { // 自定义类名\n      type: String,\n      default: '',\n    },\n    color: { // 图标颜色\n      type: String,\n    },\n    size: {\n      // 图标大小，宽=高\n      type: [Number, String],\n    },\n  },",S='chainWebpack: (config) => {\n    // 解析svg文件，该插件会自动将@/src/assets/icon/svgIcon下的svg文件,整合并注入到document中\n    config.module\n        .rule("svg")\n        .exclude.add(path.resolve("src/assets/images/icon/svgIcon")) // url-loader不处理\n        .end();\n    config.module\n        .rule("icon")\n        .test(/\\.svg$/)\n        .include.add(path.resolve("src/assets/images/icon/svgIcon"))\n        .end()\n        .use("svg-sprite-loader")\n        .loader("svg-sprite-loader")\n        .options({\n            symbolId: "icon-[name]",\n        })\n        .end();\n},',B="import { Icon } from 'fedora';\nIcon.useIcons(\"@/src/assets/icon/svgIcon\");";n("b5c4");w.render=k;c["default"]=w},b5c4:function(e,c,n){"use strict";n("581a")}}]);
//# sourceMappingURL=chunk-7e82f17e.1f0b90b2.js.map
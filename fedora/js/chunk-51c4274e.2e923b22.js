(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-51c4274e"],{2771:function(e,n,t){"use strict";t("b183")},9882:function(e,n,t){"use strict";t.r(n);var o=t("7a23"),a={class:"article-page-wrap"},c={class:"article-page"},i=Object(o["createVNode"])("h1",{class:"article-h1"}," Loading 加载中 ",-1),r=Object(o["createVNode"])("p",{class:"article-p"}," Loading 加载中 ",-1),d=Object(o["createVNode"])("h2",{class:"article-h2"}," 基础使用 ",-1),s={class:"demo-wrap"},l={class:"inline-list"},p=Object(o["createTextVNode"])("触发加载中"),u=Object(o["createVNode"])("p",{class:"article-p"}," 若你正使用的是Composition API，可以使用inject来引入方法 ",-1),b=Object(o["createVNode"])("h2",{class:"article-h2"}," 全局配置 ",-1),j=Object(o["createVNode"])("p",{class:"article-p"}," setLoadingGlobal(props) 方法用于设置一些全局的参数，以后每次触发showLoading都会使用那些参数，当然，你可以在showLoading的时候覆盖全局参数 ",-1),h=Object(o["createVNode"])("h2",{class:"article-h2"}," Props 属性 ",-1);function g(e,n,t,g,O,m){var N=Object(o["resolveComponent"])("fe-button"),f=Object(o["resolveComponent"])("code-pan");return Object(o["openBlock"])(),Object(o["createBlock"])("div",a,[Object(o["createVNode"])("div",c,[i,r,d,Object(o["createVNode"])("div",s,[Object(o["createVNode"])("ul",l,[Object(o["createVNode"])("li",null,[Object(o["createVNode"])(N,{onClick:e.showLoading,type:"primary"},{default:Object(o["withCtx"])((function(){return[p]})),_:1},8,["onClick"])])])]),Object(o["createVNode"])(f,{code:e.baseDemo,language:"js"},null,8,["code"]),u,Object(o["createVNode"])(f,{code:e.injectDemo,language:"js"},null,8,["code"]),b,j,h,Object(o["createVNode"])(f,{code:e.props},null,8,["code"])])])}var O=Object(o["defineComponent"])({name:"Loading",data:function(){return{baseDemo:m,injectDemo:N,props:f}},methods:{showLoading:function(){var e=this;this.$showLoading({title:"3秒后消失"}),setTimeout((function(){e.$hideLoading()}),3e3)}}}),m="methods: {\n  showLoading() {\n    this.$showLoading({ title: '3秒后消失' });\n    setTimeout(() => {\n      this.$hideLoading();\n    }, 3000);\n  },\n},",N="inject('setLoadingGlobal');\ninject('showLoading');\ninject('hideLoading');",f="  props: {\n    title: {\n      // 内容\n      type: String,\n      require: true,\n    },\n    mask: {\n      // 是否显示遮罩\n      type: Boolean,\n      default: true,\n    },\n    maskOpacity: {\n      // 遮罩透明度\n      type: Number,\n      default: 0,\n    },\n    position: {\n      // 位置\n      type: String,\n      default: 'default',\n      validate(position) {\n        return ['default', 'top', 'middle', 'bottom'].includes(position);\n      },\n    },\n    type: {\n      // 图标\n      type: String,\n      default: 'CHASE',\n      validator(type) {\n        return (\n          typeof type === 'string'\n          && [\n            'PLANE',\n            'CHASE',\n            'BOUNCE',\n            'WAVE',\n            'PULSE',\n            'FLOW',\n            'SWING',\n            'CIRCLE',\n            'CIRCLE-FADE',\n            'GRID',\n            'FOLD',\n            'WANDER',\n          ].includes(type)\n        );\n      },\n    },\n    size: {\n      // 大小\n      type: Number,\n      default: 40, // px\n    },\n    speed: {\n      // 旋转速度\n      type: Number,\n      default: 1,\n      validator(value) {\n        return typeof value === 'number' && value > 0;\n      },\n    },\n  },";t("2771");O.render=g;n["default"]=O},b183:function(e,n,t){}}]);
//# sourceMappingURL=chunk-51c4274e.2e923b22.js.map